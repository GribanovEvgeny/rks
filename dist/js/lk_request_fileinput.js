/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/lk_request_fileinput.js":
/*!****************************************!*\
  !*** ./src/js/lk_request_fileinput.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lk_send_request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lk_send_request.js */ \"./src/js/lk_send_request.js\");\n\r\n\r\n    function parseLimit(size) {\r\n      if (!size) return Number.MAX_VALUE;\r\n      if (typeof size == \"number\") return size > 0 ? size : Number.MAX_VALUE;\r\n      size = size.toString().toLowerCase();\r\n      size = /^(\\d+)(k|m)?$/g.exec(size);\r\n      if (!size) return Number.MAX_VALUE;\r\n      var result = parseInt(size[1], 10);\r\n      if (size[2] == \"k\")\r\n        result *= 1024;\r\n      else if (size[2] == \"m\")\r\n        result *= 1024 * 1024;\r\n      else if (size[2] == \"g\") result *= 1024 * 1024 * 1024;\r\n      return result;\r\n    }\r\n\r\n    function formatSize(size) {\r\n      var K = 1024;\r\n      var M = K * K;\r\n      var suffix = \"\";\r\n      if (size > K) {\r\n        size /= K;\r\n        suffix = \" кб\";\r\n      }\r\n      if (size > K) {\r\n        size /= K;\r\n        suffix = \" мб\";\r\n      }\r\n      size = size.toFixed(2);\r\n      size = size.replace(/0+$/gi, \"\").replace(/\\.$/gi, \"\");\r\n      return size + suffix;\r\n    }\r\n\r\n    var totalSize = 0;\r\n\r\n    function bindAttachment(div, input, size) {\r\n      div.find(\".delete_file_btn\").click(function (e) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        totalSize -= size;\r\n        input.remove();\r\n        div.remove();\r\n\t      (0,_lk_send_request_js__WEBPACK_IMPORTED_MODULE_0__.changeSliderHeight)('decrease', 37)\r\n      });\r\n    }\r\n\r\n    function bindFileInput(el) {\r\n\r\n      el = $(el);\r\n\r\n      el.change(function () {\r\n\r\n        var $this = $(this);\r\n        var label = $(\"label[for=\" + $this.attr(\"id\") + \"]\");\r\n        if (!label.length) return;\r\n\r\n        var div = $(\"<div class=\\\"attachment\\\" />\");\r\n        var names = [];\r\n        var size = 0;\r\n        $(this.files).each(function (i, f) {\r\n          names.push(f.name);\r\n          size += f.size;\r\n          $(\"<div class=\\\"attachment__item\\\" />\")\r\n            .text(f.name + \" (\" + formatSize(f.size) + \")\")\r\n            .appendTo(div);\r\n          $(\"<a href=\\\"#\\\" class=\\\"delete_file_btn\\\" />\").appendTo(div);\r\n\t\t      (0,_lk_send_request_js__WEBPACK_IMPORTED_MODULE_0__.changeSliderHeight)('increase', 37)\r\n        });\r\n\r\n\r\n\r\n        if (names.length) {\r\n\r\n          var limit = parseLimit($this.attr(\"data-maxsize\"));\r\n\r\n          // Проверить лимит на размер выбранных файлов\r\n          if (totalSize + size > limit) {\r\n            alert(\"Ошибка\", \"Размер выбранных файлов \"\r\n              + formatSize(totalSize + size)\r\n              + \" превышает указанный лимит в \" + formatSize(limit));\r\n            $this.val(\"\");\r\n            setTimeout(function () {\r\n              $this.change();\r\n            }, 1);\r\n            return;\r\n          }\r\n\r\n          label.after(div);\r\n\r\n          var newInput = $this.clone();\r\n          newInput.val(\"\");\r\n          label.after(newInput);\r\n          bindFileInput(newInput);\r\n\r\n          $this.removeAttr(\"id\");\r\n          // Присвоим наименование поле выбора файла с указанным типом документа\r\n          var doctype_id = $this.attr('data-id');\r\n          $this.attr(\"name\", \"doc_\" + doctype_id);\r\n\r\n          totalSize += size;\r\n          bindAttachment(div, $this, size);\r\n\r\n        }\r\n\r\n        else {\r\n          label.empty();\r\n        }\r\n\r\n      });\r\n\r\n    }\r\n\r\n    $(function() {\r\n      bindFileInput(\".fileinput\");\r\n    });\r\n\r\n    $(function() {\r\n\r\n         $(\".modaldelfileclose\").click(function(e) {\r\n             e.preventDefault();\r\n             var modal = e.target.parentNode.parentNode;\r\n             if (modal) modal.classList.add('hidden');\r\n         });\r\n\r\n         $(\"[data-target-modal-file^='confirm_']\").click(function(e) {\r\n             e.preventDefault();\r\n             var modal = document.getElementById(e.target.getAttribute('data-target-modal-file') || '');\r\n             if (modal) modal.classList.remove('hidden');\r\n         });\r\n\r\n         $(\"[id^='delete_cancel_']\").click(function() {\r\n             var uuid = $(this).attr(\"id\").replace(\"delete_cancel_\", \"\");\r\n             $(\"input#\" + uuid).prop(\"checked\", false);\r\n             $(\".modaldelfileclose\").trigger('click');\r\n         });\r\n\r\n         $(\"[id^='modal_accept_del_']\").click(function() {\r\n             var uuid = $(this).attr(\"id\").replace(\"modal_accept_del_\", \"\");\r\n             $(\"input#\" + uuid).prop(\"checked\", true);\r\n             $(\"label[for='\" + uuid + \"']\").hide();\r\n             $(\".attachment__item_\" + uuid).remove();\r\n             $(\".modaldelfileclose\").trigger('click');\r\n\t           (0,_lk_send_request_js__WEBPACK_IMPORTED_MODULE_0__.changeSliderHeight)('decrease', 37);\r\n         });\r\n\r\n         $(\"[id^='attachment__decldel_']\").click(function() {\r\n             var uuid = $(this).attr(\"id\").replace(\"attachment__decldel_\", \"\");\r\n             $(\"input#\" + uuid).prop(\"checked\", false);\r\n             $(\"label[for='\" + uuid + \"']\").hide();\r\n             $(\".attachment__item_\" + uuid).remove();\r\n\t         (0,_lk_send_request_js__WEBPACK_IMPORTED_MODULE_0__.changeSliderHeight)('decrease', 35);\r\n         });\r\n\r\n\r\n\r\n     });\r\n\r\n    // Блоки \"Лицо для основания на подключение\", \"Вид правообладания земельным участком\", \"Вид объекта подключения\"\r\n\r\n    function docblocksHide(doc_blocks, radio_name) {\r\n\r\n        var $cur_val = $('input[name='+radio_name+']:checked').val();\r\n\r\n        doc_blocks.each(\r\n            function () {\r\n                var $this = $(this);\r\n                var doctype_vals = $this.val()\r\n                var docblock = $this.parent().parent();\r\n                //docblock = this.parentNode;\r\n\r\n                if ($cur_val === null || $cur_val === undefined || (doctype_vals.length !== 0 && doctype_vals.indexOf($cur_val) === -1))\r\n                {\r\n                    docblock.addClass(radio_name+'_hide');\r\n                }\r\n                else {\r\n                    docblock.removeClass(radio_name+'_hide');\r\n                }\r\n\r\n                if (docblock.hasClass('personbasis_hide') ||\r\n                    docblock.hasClass('owner_or_tenant_hide') ||\r\n                    docblock.hasClass('connectobjkind_hide')) {\r\n                    docblock.addClass('hidden');\r\n                    docblock.css(\"display\", \"none\"); //временно\r\n                }\r\n                else if (!docblock.hasClass('personbasis_hide') &&\r\n                    !docblock.hasClass('owner_or_tenant_hide')  &&\r\n                    !docblock.hasClass('connectobjkind_hide')) {\r\n                    docblock.removeClass('hidden');\r\n                    docblock.css(\"display\", \"flex\"); //временно\r\n                }\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    function initCheckRadios(radio_name) {\r\n        const docblocks = $('[name^=\"doc_'+radio_name+'_\"]'); // поменять на querySelectorAll\r\n\r\n        docblocksHide(docblocks, radio_name);\r\n\r\n        const radios = document.querySelectorAll('input[name='+radio_name+']');\r\n\r\n        for (let i = 0; i < radios.length; i++) {\r\n            const label = radios[i].parentNode;\r\n            label.addEventListener('click', () => docblocksHide(docblocks, radio_name));\r\n        }\r\n    }\r\n\r\n    if (document.querySelector('.personbasis')) initCheckRadios('personbasis');\r\n    if (document.querySelector('.owner_or_tenant')) initCheckRadios('owner_or_tenant');\r\n    if (document.querySelector('.connectobjkind')) initCheckRadios('connectobjkind');\r\n\r\n\r\n\n\n//# sourceURL=webpack://rks/./src/js/lk_request_fileinput.js?");

/***/ }),

/***/ "./src/js/lk_send_request.js":
/*!***********************************!*\
  !*** ./src/js/lk_send_request.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"changeSliderHeight\": () => (/* reexport safe */ _modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _modules_slider_initSlider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/slider/initSlider.js */ \"./src/js/modules/slider/initSlider.js\");\n/* harmony import */ var _modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/slider/changeSliderHeight.js */ \"./src/js/modules/slider/changeSliderHeight.js\");\n/* harmony import */ var _modules_controls_initRadioLabels_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/controls/initRadioLabels.js */ \"./src/js/modules/controls/initRadioLabels.js\");\n/* harmony import */ var _modules_controls_initCheckboxLabels_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/controls/initCheckboxLabels.js */ \"./src/js/modules/controls/initCheckboxLabels.js\");\n/* harmony import */ var _modules_controls_initPseudoSelect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/controls/initPseudoSelect.js */ \"./src/js/modules/controls/initPseudoSelect.js\");\n/* harmony import */ var _modules_address_addressConcatination_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/address/addressConcatination.js */ \"./src/js/modules/address/addressConcatination.js\");\n/* harmony import */ var _modules_address_initAddressConcatination_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/address/initAddressConcatination.js */ \"./src/js/modules/address/initAddressConcatination.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n$(document).ready(function() {\r\n  const body = $('body')\r\n  // упрощенная подача заявления\r\n  let simpleSendRequest = false\r\n  if (document.querySelector('.requests_form.simple')) simpleSendRequest = true\r\n\r\n  // инит базового слайдера при заявлении\r\n  if (document.querySelector('.slider')) (0,_modules_slider_initSlider_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])()\r\n\r\n  // переключение радио по клику на лейбл\r\n  if (document.querySelector('.radio')) (0,_modules_controls_initRadioLabels_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])()\r\n\r\n  // переключение чекбокса по клику на лейбл\r\n  if (document.querySelector('.checkbox')) (0,_modules_controls_initCheckboxLabels_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(document)\r\n\r\n  // стартовый инит псевдо-селектов\r\n  function initPseudoSelects(baseNode) {\r\n    const selects = document.querySelectorAll('.__select')\r\n    selects.forEach(select => (0,_modules_controls_initPseudoSelect_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(select))\r\n  }\r\n  if (document.querySelector('.__select')) initPseudoSelects(document)\r\n\r\n\r\n  // стартовый инит конкатенации адресов\r\n  const addressBlocks = document.querySelectorAll('.address__concated')\r\n  if (addressBlocks) addressBlocks.forEach(addressBlock => (0,_modules_address_initAddressConcatination_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(addressBlock.parentNode.parentNode.parentNode))\r\n\r\n\r\n  // лукап\r\n  // node - это input в лукапе\r\n  // type = 'locality' / 'street' / 'district' / 'microdistrict'\r\n  function initLookup(type, node) {\r\n    const parentNode = node.parentNode\r\n    const contentNode = parentNode.querySelector('.__select__content')\r\n\r\n    // получить города с бэка\r\n    // Функцию запроса к гет сервису\r\n    // функция возвращает массив из объектов\r\n    // и вызывает renderList() для мутации списка городов в псевдоселекте\r\n    const setData = (query) => {\r\n      if (type === 'locality') setLocality(query)\r\n      if (type === 'street') setStreets(query)\r\n      if (type === 'district') setDistricts(query)\r\n      if (type === 'microdistrict') setMicrodistricts(query)\r\n    }\r\n\r\n    const setLocality = (query) => {\r\n      fetch(`./getTownsJson?townName=${query}`)\r\n        .then(response => response.json())\r\n        .then(data => renderList(searchInArray(query,JSON.parse(data)), 'town_code', 'locality'))\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    // получить улицы с бэка\r\n    const setStreets = (query) => {\r\n      let townInput = document.querySelector('input[id^=\"locality_\"]:checked');\r\n      if(townInput){\r\n        fetch(`./getStreetsJson?streetName=${query}&townCode=${townInput.value}`)\r\n          .then(response => response.json())\r\n          .then(data => renderList(searchInArray(query,JSON.parse(data)), 'street_code', 'street'))\r\n          .catch(e => console.log(e))\r\n      }\r\n        else\r\n        renderList('');\r\n    }\r\n\r\n    // получить районы с бэка\r\n    const setDistricts = (query) => {\r\n      let townInput = document.querySelector('input[id^=\"locality_\"]:checked');\r\n      if(townInput)\r\n        fetch(`./getDistrictsJson?districtName=${query}&townCode=${townInput.value}`)\r\n          .then(response => response.json())\r\n          .then(data => renderList(searchInArray(query,JSON.parse(data)), 'district_code', 'district'))\r\n          .catch(e => console.log(e))\r\n        else\r\n        renderList('');\r\n    }\r\n\r\n    // получить микрорайоны с бэка\r\n    const setMicrodistricts = (query) => {\r\n      let townInput = document.querySelector('input[id^=\"locality_\"]:checked');\r\n      if(townInput)\r\n        fetch(`./getSubdistrictsJson?subdistrictName=${query}&townCode=${townInput.value}`)\r\n          .then(response => response.json())\r\n          .then(data => renderList(searchInArray(query,JSON.parse(data)), 'subdistrict_code', 'subdistrict'))\r\n          .catch(e => console.log(e))\r\n        else\r\n        renderList('');\r\n    }\r\n\r\n    // поиск по объекту\r\n    const searchInArray = (query, arr) => {\r\n      let result = []\r\n      query = query.toLowerCase()\r\n\r\n      arr.forEach(obj => {\r\n        if (obj.name.toLowerCase().includes(query)) result.push(obj)\r\n      })\r\n\r\n      return result\r\n    }\r\n\r\n    // рендер ноды в лукап\r\n    const renderNode = (obj, name, nameId) => {\r\n      const template = `\r\n                        <input value=\"${obj.code}\" type=\"radio\" class=\"__select__input\" id=\"${nameId}_${obj.id}\" tabindex=\"0\" name=${name}>\r\n                        <label class=\"__select__label\" for=\"${nameId}_${obj.id}\">${obj.name}</label>\r\n                       `\r\n\r\n      contentNode.insertAdjacentHTML('beforeend', template)\r\n    }\r\n\r\n    // возвращаем строки в начальное состояние\r\n    function removePreviousList(contentNode) {\r\n      contentNode.innerHTML = `\r\n                               <input type=\"radio\" class=\"__select__input\" id=\"\" tabindex=\"0\">\r\n                               <label class=\"__select__label\" for=\"\">Выберите значение</label>\r\n                              `\r\n    }\r\n\r\n    function initEventListeners(node) {\r\n      const labels = node.querySelectorAll('label')\r\n      const inputs = node.querySelectorAll('input')\r\n\r\n      const handleLabelClick = (label) => {\r\n        const queryInput = node.parentNode.querySelector('input')\r\n        queryInput.value = label.innerText\r\n      }\r\n\r\n      labels.forEach(label => label.addEventListener('click', () => handleLabelClick(label)))\r\n    }\r\n\r\n    // рендер всех найденных нод\r\n    // list - массив\r\n    function renderList(list,name, nameId) {\r\n      const contentNode = parentNode.querySelector('.__select__content')\r\n      // удаляем предыдущие ноды\r\n      removePreviousList(contentNode)\r\n      parentNode.setAttribute('data-state', '')\r\n\r\n      // добавляем новые ноды\r\n      if(list !== '')\r\n      {\r\n        list.forEach(obj => renderNode(obj, name, nameId))\r\n        parentNode.setAttribute('data-state', 'active')\r\n      }\r\n\r\n      // вешаем прослушку по строкам для изменения значения\r\n      initEventListeners(contentNode)\r\n    }\r\n\r\n\r\n\r\n    // логика работы лукапа\r\n    const handleNodeKeyUp = e => {\r\n      const query = e.target.value\r\n      setData(query)\r\n    }\r\n\r\n    node.addEventListener('keyup', handleNodeKeyUp)\r\n\r\n  }\r\n\r\n  // инит лукапов в ноде\r\n  function initLookups(node) {\r\n    const localityNodes = node.querySelectorAll('.address__locality')\r\n    const streetNodes = node.querySelectorAll('.address__street')\r\n    const districtNodes = node.querySelectorAll('.address__district')\r\n    const microdistrictNodes = node.querySelectorAll('.address__microdistrict')\r\n\r\n    if (localityNodes) localityNodes.forEach(node => initLookup('locality', node))\r\n    if (streetNodes) streetNodes.forEach(node => initLookup('street', node))\r\n    if (districtNodes) districtNodes.forEach(node => initLookup('district', node))\r\n    if (microdistrictNodes) microdistrictNodes.forEach(node => initLookup('microdistrict', node))\r\n  }\r\n  // базовый инит всех лукапов\r\n  initLookups(document)\r\n\r\n  // Модалка \"Скачать инструкцию\"\r\n  function initModalDownloadInstructions() {\r\n    const instructionsBtn = $('.instructions__btn')\r\n    const instructionsModal = $('.modal_instructions')\r\n    const instructionsModalContent = $('.modal_instructions__content')\r\n    const instructionsModalClose = $('.modal_instructions .close')\r\n\r\n    instructionsBtn.click(function (e) {\r\n      e.preventDefault()\r\n      body.css('overflow', 'hidden')\r\n      instructionsModalContent.css('overflow-y', 'auto')\r\n      instructionsModalContent.css('overflow-x', 'hidden')\r\n      instructionsModal.removeClass('hidden')\r\n    })\r\n\r\n    instructionsModalClose.click(function (e) {\r\n      e.preventDefault()\r\n      body.css('overflow', 'auto')\r\n      instructionsModal.addClass('hidden')\r\n    })\r\n\r\n  }\r\n  if (document.querySelector('.instructions__btn')) initModalDownloadInstructions()\r\n\r\n\r\n  // переключение блоков в \"Запуск по очередям\", слайдер 1\r\n  function initQueueLaunch(node) {\r\n    const queueLaunchTrigger = node.querySelector('.queue_launch__trigger')\r\n    const queueLaunchYes = queueLaunchTrigger.querySelector('input[type=\"radio\"][value=\"yes\"]')\r\n    const queueLaunchNo = queueLaunchTrigger.querySelector('input[type=\"radio\"][value=\"no\"]')\r\n    const isDisabled = queueLaunchYes.disabled || queueLaunchNo.disabled\r\n    const queueLaunchYesNode = node.querySelector('.queue_launch_yes')\r\n    const queueLaunchNoNode = node.querySelector('.queue_launch_no')\r\n\r\n    if (isDisabled) return\r\n\r\n    const handleYesClick = () => {\r\n      queueLaunchYesNode.classList.remove('hidden')\r\n      queueLaunchNoNode.classList.add('hidden')\r\n    }\r\n\r\n    const handleNoClick = () => {\r\n      queueLaunchYesNode.classList.add('hidden')\r\n      queueLaunchNoNode.classList.remove('hidden')\r\n    }\r\n\r\n    queueLaunchYes.parentNode.addEventListener('click', handleYesClick)\r\n    queueLaunchNo.parentNode.addEventListener('click', handleNoClick)\r\n  }\r\n\r\n  // логика блоков очередей (добавление, удаление), 1 и 4 сладер\r\n  function initMultipleQueues() {\r\n    // состояние количества очередей\r\n    let queue_count = -1\r\n\r\n    // пересчет текущего количества очередей, отраженных на странице\r\n    function getCurrentQueueCount() {\r\n      const nodes = document.querySelectorAll('.queue_launch_yes .field__table .table__body .table__row')\r\n      const nodesLength = nodes.length\r\n\r\n      if (!nodesLength) return\r\n      nodes.forEach(node => queue_count += 1)\r\n    }\r\n    getCurrentQueueCount()\r\n\r\n    if (document.querySelector('.queue_launch__trigger')) initQueueLaunch(document)\r\n\r\n    // инит слайдера в слайд 4\r\n    function initQueueSlider() {\r\n      $('.queue_slider').slick({\r\n        dots: true,\r\n        arrows: false\r\n      })\r\n    }\r\n    initQueueSlider()\r\n\r\n    // добавление блоков очередей, 4 сладер\r\n    // создание новой ноды\r\n    function createNewNode() {\r\n      const baseNode = document.querySelector('.queue_block')\r\n      return baseNode.cloneNode(true)\r\n    }\r\n\r\n    // замена суффиксов в аттрибутах name в зависимости от номера очереди\r\n    // добавляет \"_<номер очереди>\" ко всем name очереди\r\n    function pasteNameSuffixes(node) {\r\n      const subheader = node.querySelector('.form__subheader')\r\n      subheader.innerText = `Очередь №${queue_count}`\r\n\r\n      // все инпуты, слайд 4\r\n      const inputs = node.querySelectorAll('input')\r\n      inputs.forEach(input => {\r\n        if (!input.name) return\r\n\r\n        let newName = input.name\r\n        newName += `_${queue_count}`\r\n        // newName = newName.slice(0, -2) + `_${queue_count}`\r\n        input.name = newName\r\n      })\r\n\r\n      // дивы с name = \"show_name\", слайд 4\r\n      // const divs = node.querySelectorAll('div#show_name')\r\n      // divs.forEach(div => {\r\n      //   if (!div.id) return\r\n      //\r\n      //   let newName = div.id\r\n      //   newName += `_${queue_count}`\r\n      //   div.id = newName\r\n      // })\r\n\r\n    }\r\n\r\n    // рендер новой ноды в блок .step_5, 4 слайдера\r\n    function renderNewNode(newNode) {\r\n      const parentNode = document.querySelector('.step_5 .queue_slider')\r\n      parentNode.append(newNode)\r\n    }\r\n\r\n    // удаление последней очереди\r\n    function deleteLastNode() {\r\n      const nodeContainer = $('.step_5 .queue_slider')\r\n      nodeContainer.children().last().remove()\r\n    }\r\n\r\n    // TODO: дефект - не добавляется больше 3 слайдов\r\n    // TODO: создать пустой слайдер и потом в него сложить все ноды, включая базовую?\r\n    function addNewSlide(newNode) {\r\n      $('.queue_slider').slick('slickAdd', queue_count + 1, newNode)\r\n      // newNode.setAttribute('data-slick-index', queue_count)\r\n      // $('.queue_slider').slick('slickAdd', '<div><h3>' + queue_count + '</h3></div>')\r\n    }\r\n\r\n    function removeLastSlide() {\r\n      $('.queue_slider').slick('slickRemove')\r\n    }\r\n\r\n    // создание и рендер новой ноды, 4 слайдер\r\n    function createAndRenderNewNode() {\r\n      const newNode = createNewNode()\r\n      pasteNameSuffixes(newNode)\r\n      renderNewNode(newNode)\r\n      initPseudoSelects(newNode.querySelector('.__select'))\r\n      ;(0,_modules_controls_initRadioLabels_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(newNode)\r\n      ;(0,_modules_controls_initCheckboxLabels_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(newNode)\r\n      initMasks(newNode)\r\n      initColdWaterSupply(newNode)\r\n      initDrainage(newNode)\r\n      ;(0,_modules_address_initAddressConcatination_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(newNode)\r\n\r\n      // addNewSlide(newNode)\r\n    }\r\n\r\n\r\n\r\n    // добавление новых строк в таблицу с очередями, слайдер 1\r\n    const queue_tbody = $('.queue_launch_yes tbody')\r\n\r\n    $('.queue_btn').click(function(e) {\r\n      e.preventDefault()\r\n      queue_count++\r\n\r\n      const statementtc = document.querySelector('[name=\"statementtc_queuecount\"]')\r\n      if (statementtc) statementtc.value = queue_count;\r\n\r\n      const new_row = `\r\n                      <tr class=\"table__row\">\r\n                        <td class=\"table__cell\">Очередь №${queue_count}</td>\r\n                        <td class=\"table__cell\">\r\n                          <input type=\"text\" class=\"field__input datepicker_input\" name=${'statementtc_dateplan_' + queue_count} placeholder=\"Введите данные\" />\r\n                        </td>\r\n                      </tr>\r\n                     `\r\n\r\n      queue_tbody.append(new_row)\r\n      createAndRenderNewNode()\r\n      ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n\r\n      // инициализация дейтпикера на последней добавленной строке\r\n      const lastChildDatepicker = queue_tbody.children().last().find('.datepicker_input')\r\n      lastChildDatepicker.datepicker($.datepicker.regional['ru'])\r\n      lastChildDatepicker.mask(\"99.99.9999\", { autoclear: false })\r\n    })\r\n\r\n    // удаление новых строк в таблицу с очередями, слайдер 1\r\n    $('.queue_btn_remove').click(function(e) {\r\n      e.preventDefault()\r\n      if (queue_count < 1) return\r\n\r\n      queue_count--\r\n      const statementtc = document.querySelector('[name=\"statementtc_queuecount\"]')\r\n      if (statementtc) statementtc.value = queue_count\r\n\r\n      queue_tbody.children().last().remove()\r\n      deleteLastNode()\r\n      ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n      // removeLastSlide()\r\n\r\n    })\r\n\r\n    // очистка всех очередей в таблице при переключении \"Запуск по очередям\" в \"Нет\", слайд 1\r\n    function clearTableQueues(queueTable) {\r\n      const queueRows = queueTable.querySelector('tbody').querySelectorAll('.table__row')\r\n      queueRows.forEach((queueRow, i) => {\r\n        if (i === 0) return\r\n        queueRow.remove()\r\n      })\r\n\r\n      queue_count = 0\r\n    }\r\n\r\n    // очистка всех развернутых очередей при переключении \"Запуск по очередям\" в \"Нет\", слайд 4\r\n    function clearDetailedQueues(queueSlider) {\r\n      const queueBlocks = queueSlider.querySelectorAll('.queue_block')\r\n\r\n      queueBlocks.forEach((queueBlock, i) => {\r\n        if (i === 0) return\r\n        queueBlock.remove()\r\n      })\r\n    }\r\n\r\n    // очистка всех очередей при переключении \"Запуск по очередям\" в \"Нет\", слайд 1, 4\r\n    function clearAllQueues() {\r\n      const queueTable = document.querySelector('.queue_launch_yes table')\r\n      const queueSlider = document.querySelector('.queue_slider')\r\n\r\n      clearTableQueues(queueTable)\r\n      clearDetailedQueues(queueSlider)\r\n    }\r\n\r\n    function initClearAllQueues() {\r\n      const step2 = document.querySelector('.step_2')\r\n      const queueLaunchYes = step2.querySelector('.queue_launch_yes')\r\n      const queueLaunchNo = step2.querySelector('.queue_launch_no')\r\n      const queueBtns = step2.querySelectorAll('input[name=\"queue_launch\"]')\r\n      let queueLaunchYesBtn, queueLaunchNoBtn\r\n\r\n      queueBtns.forEach(queueBtn => {\r\n        if (queueBtn.value === 'yes') return queueLaunchYesBtn = queueBtn\r\n        if (queueBtn.value === 'no') return queueLaunchNoBtn = queueBtn\r\n      })\r\n\r\n      // блокируем события при disabled\r\n      const trigger = queueLaunchYesBtn.disabled || queueLaunchNoBtn.disabled\r\n      if (trigger) return\r\n\r\n      // создание и рендер модалки\r\n      function createModal() {\r\n        const modalPopupConfirm = `\r\n                            <section class=\"modal modal_popup_confirm\">\r\n                              <div class=\"modal__content modal_popup_confirm__content\">\r\n                                <div class=\"close\"></div>\r\n                                <div class=\"modal__text\">\r\n                                  Будут удалены все данные по очередям. Удалить?\r\n                                </div>\r\n                                <div class=\"form__field\">\r\n                                  <button class=\"form__submit btn btn_agree\">Да</button>\r\n                                  <button class=\"form__submit btn dark_btn btn_abort\">Нет</button>\r\n                                </div>\r\n                              </div>\r\n                            </section>\r\n                           `\r\n\r\n        document.body.insertAdjacentHTML('beforeend', modalPopupConfirm)\r\n      }\r\n\r\n      // добавление прослушки эвентов у модалки\r\n      function addListenersToModal() {\r\n        const modalPopupConfirm = document.querySelector('.modal_popup_confirm')\r\n        const closeModal = modalPopupConfirm.querySelector('.close')\r\n        const abortModal = modalPopupConfirm.querySelector('.btn_abort')\r\n        const btnAgree = modalPopupConfirm.querySelector('.btn_agree')\r\n\r\n        // хэндлер подтверждения удаления очередей\r\n        const handleProceedModal = () => {\r\n          queueLaunchYes.removeAttribute('style')\r\n          queueLaunchNo.removeAttribute('style')\r\n          queueLaunchYes.classList.add('hidden')\r\n          queueLaunchNo.classList.remove('hidden')\r\n          modalPopupConfirm.remove()\r\n          // TODO: overflow: hidden для body\r\n          body.addClass('')\r\n          clearAllQueues()\r\n        }\r\n\r\n        // хэндлер отказа от удаления очередей\r\n        const handleCloseModal = () => {\r\n          queueLaunchYesBtn.checked = true\r\n          // ебучий jQuery прописывает инлайн стили\r\n          queueLaunchYes.removeAttribute('style')\r\n          queueLaunchNo.removeAttribute('style')\r\n          queueLaunchYes.classList.remove('hidden')\r\n          queueLaunchNo.classList.add('hidden')\r\n          modalPopupConfirm.remove()\r\n        }\r\n\r\n        closeModal.addEventListener('click', handleCloseModal)\r\n        abortModal.addEventListener('click', handleCloseModal)\r\n        btnAgree.addEventListener('click', handleProceedModal)\r\n      }\r\n\r\n      // хэндлер обработки нажатия на \"Нет\" в \"Запуск по очередям\"\r\n      const handleNoClick = () => {\r\n        (0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n        document.querySelector('[name=\"statementtc_queuecount\"').value = 0;\r\n\r\n        // при клике по радио \"Нет\", если нет заполненных очередей, то завершаем вызов модалки\r\n        if (queue_count < 1) return\r\n        createModal()\r\n        addListenersToModal()\r\n      }\r\n\r\n      const handleYesClick = () => {\r\n        ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n        document.querySelector('[name=\"statementtc_queuecount\"').value = queue_count;\r\n      }\r\n\r\n      queueLaunchNoBtn.parentNode.addEventListener('click', handleNoClick)\r\n      queueLaunchYesBtn.parentNode.addEventListener('click', handleYesClick)\r\n\r\n    }\r\n    initClearAllQueues()\r\n\r\n\r\n  }\r\n  if (document.querySelector('.queue_launch_yes')) initMultipleQueues()\r\n\r\n\r\n  // проверка очередей на disabled\r\n  // Характеристика объека подключения = \"Объекты капитального строительства\"\r\n  // Тогда очередь разблокирована, иначе заблокирована\r\n  const isQueueEnabled = (node) => {\r\n    const housekeepingNode = node.querySelector('input[name=\"connectobjkind\"][value=\"01\"]')\r\n    const objectsNode = node.querySelector('input[name=\"connectobjkind\"][value=\"02\"]')\r\n    const objectChecked = objectsNode.checked\r\n    const reconstructionNode = node.querySelector('input[name=\"connectobjkind\"][value=\"03\"]')\r\n    const queueLaunchTriggerNode = node.querySelector('.queue_launch__trigger')\r\n    const radioYesNode = queueLaunchTriggerNode.querySelector('input[type=\"radio\"][value=\"yes\"]')\r\n    const radioNoNode = queueLaunchTriggerNode.querySelector('input[type=\"radio\"][value=\"no\"]')\r\n    const queueLaunchNode = node.querySelector('.queue_launch')\r\n    const queueLaunchYesNode = node.querySelector('.queue_launch_yes')\r\n    const queueLaunchNoNode = node.querySelector('.queue_launch_no')\r\n\r\n    const hideQueueLaunch = () => {\r\n      queueLaunchTriggerNode.classList.add('hidden')\r\n      queueLaunchYesNode.classList.add('hidden')\r\n      queueLaunchNoNode.classList.remove('hidden')\r\n    }\r\n\r\n    const showQueueLaunch = () => {\r\n      queueLaunchTriggerNode.classList.remove('hidden')\r\n      if(radioYesNode.checked){\r\n        queueLaunchYesNode.classList.remove('hidden')\r\n        queueLaunchNoNode.classList.add('hidden')\r\n      }\r\n      // initQueueLaunch(document)\r\n    }\r\n\r\n    const disableQueue = () => {\r\n      // disabled для всех активных полей\r\n      radioYesNode.disabled = true\r\n      radioNoNode.disabled = true\r\n      queueLaunchYesNode.querySelector('input').disabled = true\r\n      queueLaunchYesNode.querySelector('button').disabled = true\r\n\r\n      // TODO: добавить модалку подтверждения удаления всех очередей\r\n\r\n      // \"Запуск по очередям\" скрываем - добавить класс .queue_launch__trigger\r\n      radioNoNode.checked = true\r\n      hideQueueLaunch()\r\n    }\r\n\r\n    const enableQueue = () => {\r\n      // enable для всех активных полей\r\n      radioYesNode.disabled = false\r\n      radioNoNode.disabled = false\r\n      queueLaunchYesNode.querySelector('input').disabled = false\r\n      queueLaunchYesNode.querySelector('button').disabled = false\r\n\r\n      showQueueLaunch()\r\n    }\r\n\r\n    // начальная проверка на отметку\r\n    //if (objectChecked) enableQueue()\r\n    //if (!objectChecked) disableQueue()\r\n\r\n    // хэндлер включения/выключения блокировки очередей\r\n    const handleClick = e => {\r\n      // TODO: исправить двойной клик по лейблу и инпуту\r\n      console.log(e.target)\r\n      const currInput = e.target.querySelector('input')\r\n      const currInputValue = currInput.value\r\n\r\n      if (currInputValue === '02') return enableQueue()\r\n      return disableQueue()\r\n    }\r\n\r\n    // добавляем прослушку на клики по радио\r\n    housekeepingNode.parentNode.addEventListener('click', e => handleClick(e))\r\n    objectsNode.parentNode.addEventListener('click', e => handleClick(e))\r\n    reconstructionNode.parentNode.addEventListener('click', e => handleClick(e))\r\n  }\r\n  if (document.querySelector('.queue_launch__trigger')) isQueueEnabled(document)\r\n\r\n\r\n  // добавление новых строк в таблицу с иными источниками, слайдер 4\r\n  const water_source_tbody = $('.other_water_sources tbody')\r\n  let water_source_count = 1\r\n  const water_sources_count = document.querySelector('[name=\"other_water_sources_count\"]');\r\n\r\n\r\n  $('.add_source_btn').click(function(e) {\r\n    const new_row = `\r\n                    <tr class=\"table__row\">\r\n                      <td class=\"table__cell\">\r\n                        <input type=\"text\" class=\"field__input\" name=${'other_water_sources_name_' + water_source_count} placeholder=\"Введите данные\" />\r\n                      </td>\r\n                      <td class=\"table__cell\">\r\n                        <input type=\"text\" class=\"field__input\" name=${'other_water_sources_vol_' + water_source_count} placeholder=\"Введите данные\" />\r\n                      </td>\r\n                    </tr>\r\n                   `\r\n    e.preventDefault()\r\n\r\n    water_source_tbody.append(new_row)\r\n    water_source_count++\r\n    if (water_sources_count) water_sources_count.value = water_source_count;\r\n    (0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n  })\r\n\r\n  // удаление новых строк в таблице с иными источниками, слайдер 4\r\n  $('.add_source_btn_remove').click(function(e) {\r\n    e.preventDefault()\r\n\r\n    if (water_source_count > 2) {\r\n      water_source_tbody.children().last().remove()\r\n      water_source_count--\r\n      ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n    }\r\n  })\r\n\r\n  // добавление новых строк в таблицу с характеристиками земельных участков, слайдер 4\r\n  const land_coverage_tbody = $('.land_coverage_characteristics tbody')\r\n  let land_coverage_count = 2\r\n\r\n  $('.add_coverage_btn').click(function(e) {\r\n    e.preventDefault()\r\n\r\n    const new_row = `\r\n                    <tr class=\"table__row\">\r\n                      <td class=\"table__cell\">\r\n                        <input type=\"text\" class=\"field__input\" placeholder=\"Введите данные\" />\r\n                      </td>\r\n                      <td class=\"table__cell\">\r\n                        <input type=\"text\" class=\"field__input\" name=${'other_water_sources_vol_' + water_source_count} placeholder=\"Введите данные\" />\r\n                      </td>\r\n                    </tr>\r\n                   `\r\n\r\n    land_coverage_tbody.append(new_row)\r\n    land_coverage_count++\r\n    ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n  })\r\n  // удаление новых строк в таблице с характеристиками земельных участков, слайдер 4\r\n  $('.add_coverage_btn_remove').click(function(event) {\r\n    event.preventDefault()\r\n    if (land_coverage_count <= 1) return\r\n\r\n    land_coverage_tbody.children().last().remove()\r\n    land_coverage_count--\r\n    ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n  })\r\n\r\n  // datepicker\r\n  function initDatepickers() {\r\n    $('.datepicker_input').datepicker($.datepicker.regional['ru'])\r\n  }\r\n  if (document.querySelector('.datepicker_input')) initDatepickers()\r\n\r\n\r\n  // маски\r\n  function initMasks(parentNode) {\r\n    if (parentNode.querySelector('.datepicker_input')) $('.datepicker_input').mask(\"99.99.9999\", { autoclear: false })\r\n    if (parentNode.querySelector('.snils_input')) $('.snils_input').mask(\"999-999-999 99\", { autoclear: false })\r\n    if (parentNode.querySelector('.passport_input')) $('.passport_input').mask(\"99 99 / 999999\", { autoclear: false })\r\n    if (parentNode.querySelector('.passport_serial_input')) $('.passport_serial_input').mask(\"99 99\", { autoclear: false })\r\n    if (parentNode.querySelector('.passport_number_input')) $('.passport_number_input').mask(\"999999\", { autoclear: false })\r\n    if (parentNode.querySelector('.phone_input')) $('.phone_input').mask(\"(999) 999-9999\", { autoclear: false })\r\n    if (parentNode.querySelector('.tin_ul_input')) $('.tin_ul_input').mask(\"9999999999\", { autoclear: false })\r\n    if (parentNode.querySelector('.tin_fl_input')) $('.tin_fl_input').mask(\"999999999999\", { autoclear: false })\r\n    if (parentNode.querySelector('.tin_e_input')) $('.tin_e_input').mask(\"999999999999\", { autoclear: false })\r\n    if (parentNode.querySelector('.integer_input')) $('.integer_input').on('input', function () {\r\n      $(this).val($(this).val().replace(/[^0-9]/g, ''))\r\n    })\r\n    if (parentNode.querySelector('.float_input')) $('.float_input').keypress(function (e) {\r\n      const trigger = (e.which != 46 || $(this).val().indexOf('.') != -1)\r\n                      && (e.which < 48 || e.which > 57)\r\n\r\n      if (trigger) e.preventDefault()\r\n    })\r\n  }\r\n  initMasks(document)\r\n\r\n\r\n  // Блок \"Являюсь представителем\"\r\n  function initCheckRepresentative() {\r\n    const representativeBlock = document.querySelector('.representative')\r\n    const isRepresentative = representativeBlock.querySelector('.yes')\r\n    const isRepresentativeChecked = isRepresentative.checked\r\n    const isRepresentativeLabel = isRepresentative.parentNode\r\n    const isNotRepresentative = representativeBlock.querySelector('.no')\r\n    const isNotRepresentativeLabel = isNotRepresentative.parentNode\r\n    const representativeAddDocsBlock = document.querySelector('.representative_add_docs_block')\r\n\r\n    // проверка начального состояния чекбокса\r\n    if (isRepresentativeChecked) representativeAddDocsBlock.classList.remove('hidden')\r\n    if (!isRepresentativeChecked) representativeAddDocsBlock.classList.add('hidden')\r\n\r\n    isRepresentativeLabel.addEventListener('click', () => representativeAddDocsBlock.classList.remove('hidden'))\r\n    isNotRepresentativeLabel.addEventListener('click', () => representativeAddDocsBlock.classList.add('hidden'))\r\n  }\r\n  if (document.querySelector('.representative')) initCheckRepresentative()\r\n\r\n\r\n  // Блок \"Холодное водоснабжение\", слайд 4\r\n  function initColdWaterSupply(baseNode) {\r\n    const connectionToColdWater = baseNode.querySelector('.connection_to_cold_water')\r\n    const connectionToColdWaterLabel = connectionToColdWater.parentNode\r\n    let isConnectionToColdWaterChecked = connectionToColdWater.checked\r\n    const isConnectionToColdWaterDisabled = connectionToColdWater.disabled\r\n    const coldWaterToggle = baseNode.querySelector('.cold_water_supply_toggle')\r\n\r\n    // проверка начального состояния чекбокса\r\n    if (isConnectionToColdWaterChecked) coldWaterToggle.classList.remove('hidden')\r\n    if (!isConnectionToColdWaterChecked) coldWaterToggle.classList.add('hidden')\r\n\r\n    if (isConnectionToColdWaterDisabled) return\r\n\r\n    connectionToColdWaterLabel.addEventListener('click', () => {\r\n      isConnectionToColdWaterChecked = !isConnectionToColdWaterChecked\r\n\r\n      if (isConnectionToColdWaterChecked) {\r\n        coldWaterToggle.classList.remove('hidden')\r\n        ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n      } else {\r\n        coldWaterToggle.classList.add('hidden')\r\n        ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n      }\r\n\r\n    })\r\n  }\r\n  const queueBlocks = document.querySelectorAll('.queue_block')\r\n  if (queueBlocks) queueBlocks.forEach(queueBlock => initColdWaterSupply(queueBlock))\r\n\r\n  // Блок \"Водоотведение\", слайд 4\r\n  function initDrainage(baseNode) {\r\n    const connectionToDrainage= baseNode.querySelector('.connection_to_drainage')\r\n    const connectionToDrainageLabel = connectionToDrainage.parentNode\r\n    let isConnectionToDrainageChecked = connectionToDrainage.checked\r\n    const isConnectionToDrainageDisabled = connectionToDrainage.disabled\r\n    const drainageToggle = baseNode.querySelector('.drainage_toggle')\r\n\r\n    // проверка начального состояния чекбокса\r\n    if (isConnectionToDrainageChecked) drainageToggle.classList.remove('hidden')\r\n    if (!isConnectionToDrainageChecked) drainageToggle.classList.add('hidden')\r\n\r\n    if (isConnectionToDrainageDisabled) return\r\n\r\n    connectionToDrainageLabel.addEventListener('click', () => {\r\n      isConnectionToDrainageChecked = !isConnectionToDrainageChecked\r\n\r\n      if (isConnectionToDrainageChecked) {\r\n        drainageToggle.classList.remove('hidden')\r\n        ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n      } else {\r\n        drainageToggle.classList.add('hidden')\r\n        ;(0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])()\r\n      }\r\n    })\r\n  }\r\n  if (queueBlocks) queueBlocks.forEach(queueBlock => initDrainage(queueBlock))\r\n\r\n\r\n  //#region женин код\r\n  if($('input[name=\"requesttype_id\"]').val() == '10002')\r\n    $('input[name=\"personbasis\"][value=\"05\"]').parent().attr( 'style', 'display:none;' );\r\n\r\n  function getTitle(el) {\r\n    return el.siblings(\".required\").text();\r\n  }\r\n\r\n  let form = $('form');\r\n  $(\"input[type='submit']\").click(function (e) {\r\n    let activeElement = $(document.activeElement, this).attr(\"name\")\r\n    switch (activeElement) {\r\n      case \"ecp_button\":\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        var err = [];\r\n        let elems = form.find(\".required + *\");\r\n        elems.each(function () {\r\n          var $this = $(this);\r\n          let attr = $this.prop(\"tagName\");\r\n          switch (attr) {\r\n            case \"SPAN\":\r\n              if ($this.find('input:checked').length == 0 && $this.is(':visible'))\r\n                err.push(\"Не выбрано ни одно значение поля \" + getTitle($this));\r\n              break;\r\n            case \"INPUT\":\r\n              if (!$this.val() && $this.is(':visible'))\r\n                err.push(\"Не указано значение поля \" + getTitle($this));\r\n              break;\r\n            case \"DIV\":\r\n              if ($this.is(':visible') && (\r\n                  $this.find(\".__select__title\").text() == \"Выберите тип документа\" ||\r\n                  $this.text() == \"Полученный адрес\" ||\r\n                  ($this.find(\".attachment\").length == 0 &&\r\n                    $this.hasClass(\"field__control_btns\"))\r\n                ))\r\n                err.push(\"Не указано значение поля \" + getTitle($this));\r\n              break;\r\n            case \"TABLE\":\r\n              // тут надо проверить обязательную таблицу на заполненность в Заявлении на подключение\r\n              break;\r\n          }\r\n        });\r\n\r\n        let elems_req_group = $('.form__field:not(.hidden) [class*=req_group_]');\r\n        var group_names = [];   // получаем существующие названия групп\r\n        elems_req_group.each(function () {\r\n          var $this = $(this);\r\n          var el_id = $this[0].id;\r\n          if (!group_names.includes(el_id))\r\n            group_names.push(el_id);\r\n        });\r\n        group_names.forEach(function (e) {    // для каждой группы получаем ее элементы\r\n          let group = elems_req_group.filter('#' + e);\r\n          let isAtt = false;\r\n          group.each(function () {\r\n            var $this = $(this);\r\n            if ($this.find(\".attachment\").length != 0) {\r\n              isAtt = true;\r\n              return false;\r\n              }\r\n          });\r\n          if (!isAtt) {   // если в группе не оказалось прикрепленных файлов, то выдаем обшибку\r\n            if (group.length === 1 ) err.push(\"<h6>Требуется прикрепить документ: </h6> \\n <p>\" + group[0].previousElementSibling.innerText + '</p>');\r\n            else {\r\n              let text = \"<h6>Требуется прикрепить один из документов: \\n</h6>\";\r\n              group.each(function () {\r\n                var $this = $(this);\r\n                text = text + '<p>' + $this[0].previousElementSibling.innerText + ';</p>';\r\n              })\r\n              err.push(text);\r\n            }\r\n          }\r\n        })\r\n\r\n\r\n        if (err.length) {\r\n          $('.modal.modal_alert.autopopup.hidden .modal__text').html(err[0]);\r\n          $('.modal.modal_alert.autopopup.hidden').removeClass('hidden');\r\n          return;\r\n        }\r\n        form = $(this).closest('form');\r\n        form.append(\"<input type='hidden' name='ecp' value='true' />\");\r\n        document.querySelectorAll(\"form input[disabled='']\").forEach(inp => inp.removeAttribute(\"disabled\"));\r\n        form.submit();\r\n        break;\r\n      case \"save_button\":\r\n        $('input[name=\"redirect\"]').val('newrequesttp')\r\n        break;\r\n    }\r\n    document.querySelectorAll(\"form input[disabled='']\").forEach(inp => inp.removeAttribute(\"disabled\"));\r\n  });\r\n\r\n  let is_simple;\r\n  function HideElemsSimple(){\r\n    if(is_simple)\r\n      switch(document.querySelector('[name=\"connectobjkind\"]:checked').getAttribute('id')){\r\n        case 'connectobjkind_01':\r\n          document.querySelector('[name^=\"room_number\"]').parentElement.classList.add('hidden'); // Номер квартиры\r\n          if(document.querySelector('[name^=\"landplot_area\"]'))\r\n            document.querySelector('[name^=\"landplot_area\"]').parentElement.classList.remove('hidden'); // Площадь земельного участка\r\n          if(document.querySelector('[name^=\"usage_type\"]'))\r\n            document.querySelector('[name^=\"usage_type\"]').parentElement.classList.remove('hidden'); // Вид разрешенного использования\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').previousElementSibling.innerHTML = 'Наименование объекта подключения'; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').value = `Частный дом по адресу: ${document.querySelector('[name=\"show_name\"]').value}`; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"resourcekindreq\"]').closest('.form__field').classList.add('hidden'); // Необходимые виды ресурсов\r\n          document.querySelector('[name^=\"infmaxparam1\"]').closest('.form__field').previousElementSibling.classList.add('hidden'); // Информация о предельных параметрах разрешенного строительства\r\n          document.querySelector('[name^=\"infmaxparam1\"]').parentElement.classList.add('hidden'); // Количество надземных этажей\r\n          document.querySelector('[name^=\"infmaxparam2\"]').parentElement.classList.add('hidden'); // Этажность\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].md').setAttribute('title', 'Не более 1 м3/сут'); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value == \"\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value = '1';\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].mh').parentElement.classList.add('hidden'); // Подключаемая нагрузка (м3/час)\r\n          document.querySelector('[name^=\"connectloadparamdata_value3\"]').parentElement.classList.add('hidden'); // Кол-во пожарных кранов, шт\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_08\"].ls').parentElement.classList.add('hidden'); // Расход на наружное пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_02\"].ls').parentElement.classList.add('hidden'); // Расход на внутреннее пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_07\"].ls').parentElement.classList.add('hidden'); // Расход на автоматическое пожаротушение, л/с\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').setAttribute('title', 'Не более 1 м3/сут'); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value == \"\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value = '1';\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].mh').parentElement.classList.add('hidden'); // Подключаемая нагрузка (м3/час)\r\n        break;\r\n        case 'connectobjkind_02':\r\n          document.querySelector('[name^=\"room_number\"]').parentElement.classList.add('hidden'); // Номер квартиры\r\n          if(document.querySelector('[name^=\"landplot_area\"]'))\r\n            document.querySelector('[name^=\"landplot_area\"]').parentElement.classList.remove('hidden'); // Площадь земельного участка\r\n          if(document.querySelector('[name^=\"usage_type\"]'))\r\n            document.querySelector('[name^=\"usage_type\"]').parentElement.classList.remove('hidden'); // Вид разрешенного использования\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').previousElementSibling.innerHTML = 'Наименование объекта подключения (МКД, Магазин и т.д.)'; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').value = `${document.querySelector('[name=\"show_name\"]').value}`; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"resourcekindreq\"]').closest('.form__field').classList.remove('hidden'); // Необходимые виды ресурсов\r\n          document.querySelector('[name^=\"infmaxparam1\"]').closest('.form__field').previousElementSibling.classList.remove('hidden'); // Информация о предельных параметрах разрешенного строительства\r\n          document.querySelector('[name^=\"infmaxparam1\"]').parentElement.classList.remove('hidden'); // Количество надземных этажей\r\n          document.querySelector('[name^=\"infmaxparam2\"]').parentElement.classList.remove('hidden'); // Этажность\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].md').setAttribute('title', ''); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value == \"1\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value = ''; // Подключаемая нагрузка (м3/сут.)\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].mh').parentElement.classList.remove('hidden'); // Подключаемая нагрузка (м3/час)\r\n          document.querySelector('[name^=\"connectloadparamdata_value3\"]').parentElement.classList.remove('hidden'); // Кол-во пожарных кранов, шт\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_08\"].ls').parentElement.classList.remove('hidden'); // Расход на наружное пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_02\"].ls').parentElement.classList.remove('hidden'); // Расход на внутреннее пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_07\"].ls').parentElement.classList.remove('hidden'); // Расход на автоматическое пожаротушение, л/с\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').setAttribute('title', ''); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value == \"1\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value = ''; // Подключаемая нагрузка (м3/сут.)\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].mh').parentElement.classList.remove('hidden'); // Подключаемая нагрузка (м3/час)\r\n        break;\r\n        case 'connectobjkind_03':\r\n          document.querySelector('[name^=\"room_number\"]').parentElement.classList.remove('hidden'); // Номер квартиры\r\n          if(document.querySelector('[name^=\"landplot_area\"]'))\r\n            document.querySelector('[name^=\"landplot_area\"]').parentElement.classList.add('hidden'); // Площадь земельного участка\r\n          if(document.querySelector('[name^=\"usage_type\"]'))\r\n            document.querySelector('[name^=\"usage_type\"]').parentElement.classList.add('hidden'); // Вид разрешенного использования\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').previousElementSibling.innerHTML = 'Наименование объекта подключения (Офис, магазин, аптека и т.д.)'; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').value = `${document.querySelector('[name=\"show_name\"]').value}`; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"resourcekindreq\"]').closest('.form__field').classList.add('hidden'); // Необходимые виды ресурсов\r\n          document.querySelector('[name^=\"infmaxparam1\"]').closest('.form__field').previousElementSibling.classList.add('hidden'); // Информация о предельных параметрах разрешенного строительства\r\n          document.querySelector('[name^=\"infmaxparam1\"]').parentElement.classList.add('hidden'); // Количество надземных этажей\r\n          document.querySelector('[name^=\"infmaxparam2\"]').parentElement.classList.add('hidden'); // Этажность\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].md').setAttribute('title', ''); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value == \"1\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value = ''; // Подключаемая нагрузка (м3/сут.)\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].mh').parentElement.classList.add('hidden'); // Подключаемая нагрузка (м3/час)\r\n          document.querySelector('[name^=\"connectloadparamdata_value3\"]').parentElement.classList.add('hidden'); // Кол-во пожарных кранов, шт\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_08\"].ls').parentElement.classList.add('hidden'); // Расход на наружное пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_02\"].ls').parentElement.classList.add('hidden'); // Расход на внутреннее пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_07\"].ls').parentElement.classList.add('hidden'); // Расход на автоматическое пожаротушение, л/с\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').setAttribute('title', ''); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value == \"1\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value = ''; // Подключаемая нагрузка (м3/сут.)\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].mh').parentElement.classList.add('hidden'); // Подключаемая нагрузка (м3/час)\r\n        break;\r\n      }\r\n    else\r\n      switch(document.querySelector('[name=\"connectobjkind\"]:checked').getAttribute('id')){\r\n        case 'connectobjkind_01':\r\n          document.querySelector('[name^=\"room_number\"]').parentElement.classList.add('hidden'); // Номер квартиры\r\n          if(document.querySelector('[name^=\"landplot_area\"]'))\r\n            document.querySelector('[name^=\"landplot_area\"]').parentElement.classList.remove('hidden'); // Площадь земельного участка\r\n          if(document.querySelector('[name^=\"usage_type\"]'))\r\n            document.querySelector('[name^=\"usage_type\"]').parentElement.classList.remove('hidden'); // Вид разрешенного использования\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').previousElementSibling.innerHTML = 'Наименование объекта подключения'; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').value = `Частный дом по адресу: ${document.querySelector('[name=\"show_name\"]').value}`; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"resourcekindreq\"]').closest('.form__field').classList.remove('hidden'); // Необходимые виды ресурсов\r\n          document.querySelector('[name^=\"infmaxparam1\"]').closest('.form__field').previousElementSibling.classList.remove('hidden'); // Информация о предельных параметрах разрешенного строительства\r\n          document.querySelector('[name^=\"infmaxparam1\"]').parentElement.classList.remove('hidden'); // Количество надземных этажей\r\n          document.querySelector('[name^=\"infmaxparam2\"]').parentElement.classList.remove('hidden'); // Этажность\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].md').setAttribute('title', 'Не более 1 м3/сут'); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value == \"\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value = '1';\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].mh').parentElement.classList.remove('hidden'); // Подключаемая нагрузка (м3/час)\r\n          document.querySelector('[name^=\"connectloadparamdata_value3\"]').parentElement.classList.remove('hidden'); // Кол-во пожарных кранов, шт\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_08\"].ls').parentElement.classList.remove('hidden'); // Расход на наружное пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_02\"].ls').parentElement.classList.remove('hidden'); // Расход на внутреннее пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_07\"].ls').parentElement.classList.remove('hidden'); // Расход на автоматическое пожаротушение, л/с\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').setAttribute('title', 'Не более 1 м3/сут'); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value == \"\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value = '1';\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].mh').parentElement.classList.remove('hidden'); // Подключаемая нагрузка (м3/час)\r\n        break;\r\n        case 'connectobjkind_02':\r\n          document.querySelector('[name^=\"room_number\"]').parentElement.classList.add('hidden'); // Номер квартиры\r\n          if(document.querySelector('[name^=\"landplot_area\"]'))\r\n            document.querySelector('[name^=\"landplot_area\"]').parentElement.classList.remove('hidden'); // Площадь земельного участка\r\n          if(document.querySelector('[name^=\"usage_type\"]'))\r\n            document.querySelector('[name^=\"usage_type\"]').parentElement.classList.remove('hidden'); // Вид разрешенного использования\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').previousElementSibling.innerHTML = 'Наименование объекта подключения (МКД, Магазин и т.д.)'; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').value = `${document.querySelector('[name=\"show_name\"]').value}`; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"resourcekindreq\"]').closest('.form__field').classList.remove('hidden'); // Необходимые виды ресурсов\r\n          document.querySelector('[name^=\"infmaxparam1\"]').closest('.form__field').previousElementSibling.classList.remove('hidden'); // Информация о предельных параметрах разрешенного строительства\r\n          document.querySelector('[name^=\"infmaxparam1\"]').parentElement.classList.remove('hidden'); // Количество надземных этажей\r\n          document.querySelector('[name^=\"infmaxparam2\"]').parentElement.classList.remove('hidden'); // Этажность\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].md').setAttribute('title', ''); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value == \"1\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value = ''; // Подключаемая нагрузка (м3/сут.)\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].mh').parentElement.classList.remove('hidden'); // Подключаемая нагрузка (м3/час)\r\n          document.querySelector('[name^=\"connectloadparamdata_value3\"]').parentElement.classList.remove('hidden'); // Кол-во пожарных кранов, шт\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_08\"].ls').parentElement.classList.remove('hidden'); // Расход на наружное пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_02\"].ls').parentElement.classList.remove('hidden'); // Расход на внутреннее пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_07\"].ls').parentElement.classList.remove('hidden'); // Расход на автоматическое пожаротушение, л/с\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').setAttribute('title', ''); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value == \"1\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value = ''; // Подключаемая нагрузка (м3/сут.)\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].mh').parentElement.classList.remove('hidden'); // Подключаемая нагрузка (м3/час)\r\n\r\n        break;\r\n        case 'connectobjkind_03':\r\n          document.querySelector('[name^=\"room_number\"]').parentElement.classList.add('hidden'); // Номер квартиры\r\n          if(document.querySelector('[name^=\"landplot_area\"]'))\r\n            document.querySelector('[name^=\"landplot_area\"]').parentElement.classList.remove('hidden'); // Площадь земельного участка\r\n          if(document.querySelector('[name^=\"usage_type\"]'))\r\n            document.querySelector('[name^=\"usage_type\"]').parentElement.classList.remove('hidden'); // Вид разрешенного использования\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').previousElementSibling.innerHTML = 'Наименование объекта подключения (Офис, магазин, аптека и т.д.)'; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"statementtc_connectobjname\"]').value = `${document.querySelector('[name=\"show_name\"]').value}`; // Наименование объекта подключения\r\n          document.querySelector('[name^=\"resourcekindreq\"]').closest('.form__field').classList.remove('hidden'); // Необходимые виды ресурсов\r\n          document.querySelector('[name^=\"infmaxparam1\"]').closest('.form__field').previousElementSibling.classList.remove('hidden'); // Информация о предельных параметрах разрешенного строительства\r\n          document.querySelector('[name^=\"infmaxparam1\"]').parentElement.classList.remove('hidden'); // Количество надземных этажей\r\n          document.querySelector('[name^=\"infmaxparam2\"]').parentElement.classList.remove('hidden'); // Этажность\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].md').setAttribute('title', ''); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value == \"1\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1\"].md').value = ''; // Подключаемая нагрузка (м3/сут.)\r\n          document.querySelector('[name^=\"connectloadparamdata_value1\"].mh').parentElement.classList.remove('hidden'); // Подключаемая нагрузка (м3/час)\r\n          document.querySelector('[name^=\"connectloadparamdata_value3\"]').parentElement.classList.remove('hidden'); // Кол-во пожарных кранов, шт\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_08\"].ls').parentElement.classList.remove('hidden'); // Расход на наружное пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_02\"].ls').parentElement.classList.remove('hidden'); // Расход на внутреннее пожаротушение, л/с\r\n          document.querySelector('[name^=\"addconnectloadparamdata_value_07\"].ls').parentElement.classList.remove('hidden'); // Расход на автоматическое пожаротушение, л/с\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').setAttribute('title', ''); // Подключаемая нагрузка (м3/сут.)\r\n          if(document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value == \"1\") // Подключаемая нагрузка (м3/сут.)\r\n            document.querySelector('[name^=\"connectloadparamdata_value1_2\"].md').value = ''; // Подключаемая нагрузка (м3/сут.)\r\n          document.querySelector('[name^=\"connectloadparamdata_value1_2\"].mh').parentElement.classList.remove('hidden'); // Подключаемая нагрузка (м3/час)\r\n        break;\r\n      }\r\n      (0,_modules_slider_changeSliderHeight_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\r\n  }\r\n\r\n  $.ajax({\r\n    url: \"./getSimpleJson/\",\r\n    success: function(data){\r\n      is_simple = data === \"true\" ? true : false;\r\n      //is_simple = false\r\n\r\n      if(is_simple){\r\n        let list_hidden_elem = document.querySelectorAll(\r\n          \"[name='infmaxparam3']\" + // Протяжность сети\r\n          \",[name='infmaxparam4']\" + // Диаметр сети\r\n          \",[name='techcondobj_note']\" + // Примечание\r\n          \",[name='connectloadparamdata_value2']\" +\r\n          \",[name='addconnectloadparamdata_value_05']\" +\r\n          \",[name='connectloadparamdata_value2_2']\" +\r\n          \",[name='addconnectloadparamdata_value_06']\" +\r\n          \",[name='addconnectloadparamdata_value_08'].mh\" +\r\n          \",[name='addconnectloadparamdata_value_08'].md\" +\r\n          \",[name='addconnectloadparamdata_value_02'].mh\" +\r\n          \",[name='addconnectloadparamdata_value_02'].md\" +\r\n          \",[name='addconnectloadparamdata_value_07'].mh\" +\r\n          \",[name='addconnectloadparamdata_value_07'].md\"\r\n        );\r\n        list_hidden_elem.forEach(x => x.parentElement.classList.add('hidden'));\r\n        if(document.querySelector('[name=\"connectobjkind\"]:checked').id == 'connectobjkind_03')\r\n          document.querySelector('[name=\"room_number\"]').parentElement.classList.remove('hidden');\r\n\r\n        document.querySelector('.requests_form').classList.add('simple');\r\n      }\r\n\r\n      document.querySelectorAll('[name=\"connectobjkind\"]').forEach(x => x.parentElement.addEventListener('click', HideElemsSimple));\r\n\r\n      HideElemsSimple();\r\n    }\r\n  });\r\n  //#endregion\r\n})\r\n\r\n\r\n\n\n//# sourceURL=webpack://rks/./src/js/lk_send_request.js?");

/***/ }),

/***/ "./src/js/modules/address/addressConcatination.js":
/*!********************************************************!*\
  !*** ./src/js/modules/address/addressConcatination.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Пересчет итогового адреса\r\nfunction addressConcatination(baseNode) {\r\n  const concated = baseNode.querySelector('.address__concated')\r\n  const locality = baseNode.querySelector('.address__locality')\r\n  const district = baseNode.querySelector('.address__district')\r\n  const microdistrict = baseNode.querySelector('.address__microdistrict')\r\n  const street = baseNode.querySelector('.address__street')\r\n  const housing = baseNode.querySelector('.address__housing')\r\n  const house = baseNode.querySelector('.address__house')\r\n\r\n  setTimeout(() => {\r\n    const resultLocality = `${locality.value ? 'г. ' + locality.value : ''}`\r\n    const resultdDistrict = `${district.value ?  ', ' + district.value + ' район' : ''}`\r\n    const resultMicrodistrict = `${microdistrict.value ? ', микрорайон ' + microdistrict.value : ''}`\r\n    const resultStreet = `${street.value ? ', ул. ' + street.value : ''}`\r\n    const resultHousing = `${housing.value ? ', корпус ' + housing.value : ''}`\r\n    const resultHouse = `${house.value ? ', дом ' + house.value : ''}`\r\n    let resultAddress = `${resultLocality + resultdDistrict + resultMicrodistrict + resultStreet + resultHousing + resultHouse + '.'}`\r\n    if (resultAddress[0] === ',') resultAddress = resultAddress.slice(1)\r\n    if (resultAddress[0] === '.') resultAddress = ''\r\n\r\n    concated.value = resultAddress\r\n\r\n    if(document.querySelector('[name=\"connectobjkind\"]:checked').id == 'connectobjkind_01')\r\n      document.querySelector('[name=\"statementtc_connectobjname\"]').value = `Частный дом по адресу: ${resultAddress}`;\r\n    // concated.textContent = resultAddress\r\n  }, 100)\r\n}\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (addressConcatination);\r\n\n\n//# sourceURL=webpack://rks/./src/js/modules/address/addressConcatination.js?");

/***/ }),

/***/ "./src/js/modules/address/initAddressConcatination.js":
/*!************************************************************!*\
  !*** ./src/js/modules/address/initAddressConcatination.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// инит модуля пересчета адреса\r\nfunction initAddressConcatination(baseNode) {\r\n  const concated = baseNode.querySelector('.address__concated')\r\n  const locality = baseNode.querySelector('.address__locality')\r\n  const district = baseNode.querySelector('.address__district')\r\n  const microdistrict = baseNode.querySelector('.address__microdistrict')\r\n  const street = baseNode.querySelector('.address__street')\r\n  const housing = baseNode.querySelector('.address__housing')\r\n  const house = baseNode.querySelector('.address__house')\r\n\r\n\r\n  if (locality) locality.addEventListener('change', () => addressConcatination(baseNode))\r\n  if (district) district.addEventListener('change', () => addressConcatination(baseNode))\r\n  if (microdistrict) microdistrict.addEventListener('change', () => addressConcatination(baseNode))\r\n  if (street) street.addEventListener('change', () => addressConcatination(baseNode))\r\n  if (housing) housing.addEventListener('change', () => addressConcatination(baseNode))\r\n  if (house) house.addEventListener('change', () => addressConcatination(baseNode))\r\n}\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initAddressConcatination);\r\n\n\n//# sourceURL=webpack://rks/./src/js/modules/address/initAddressConcatination.js?");

/***/ }),

/***/ "./src/js/modules/controls/initCheckboxLabels.js":
/*!*******************************************************!*\
  !*** ./src/js/modules/controls/initCheckboxLabels.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction initCheckboxLabels(node) {\r\n  const checkboxes = node.querySelectorAll('.checkbox')\r\n\r\n  checkboxes.forEach(checkbox => {\r\n    const label = checkbox.parentNode\r\n    const isDisabled = checkbox.disabled\r\n\r\n    if (isDisabled) return\r\n\r\n    label.addEventListener('click', function () {\r\n      const checkbox = label.querySelector('.checkbox')\r\n      checkbox.checked = !checkbox.checked\r\n    })\r\n  })\r\n}\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initCheckboxLabels);\r\n\n\n//# sourceURL=webpack://rks/./src/js/modules/controls/initCheckboxLabels.js?");

/***/ }),

/***/ "./src/js/modules/controls/initPseudoSelect.js":
/*!*****************************************************!*\
  !*** ./src/js/modules/controls/initPseudoSelect.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// псевдо-селект\r\nfunction initPseudoSelect(select) {\r\n  const selectTitle = select.querySelector('.__select__title')\r\n  const selectLabels = select.querySelectorAll('.__select__label')\r\n\r\n  selectTitle.addEventListener('click', function () {\r\n    if ('active' === select.getAttribute('data-state')) {\r\n      select.setAttribute('data-state', '')\r\n    } else {\r\n      select.setAttribute('data-state', 'active')\r\n    }\r\n  })\r\n\r\n  for (let i = 0; i < selectLabels.length; i++) {\r\n    selectLabels[i].addEventListener('click', function (e) {\r\n      selectTitle.textContent = e.target.textContent\r\n      selectTitle.value = e.target.textContent\r\n      select.setAttribute('data-state', '')\r\n\r\n      // вызов пересчета адреса в случае, если модуль активен\r\n      const addressNode = this.parentNode.parentNode.parentNode.parentNode.parentNode\r\n      const thisAddressConcatination = addressNode.querySelector('.address__concated')\r\n      if (thisAddressConcatination) addressConcatination(addressNode)\r\n    })\r\n  }\r\n\r\n  // скрытие при клике по body кроме .__select\r\n  const body = document.querySelector('body')\r\n  body.addEventListener('click', e => {\r\n    const eClassList = e.target.classList\r\n    const trigger = (eClassList[0] !== '__select__title')\r\n                    && (eClassList[0] !== '__select__content')\r\n                    && (eClassList[0] !== '__select__input')\r\n\r\n    if (trigger) select.setAttribute('data-state', '')\r\n  })\r\n}\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initPseudoSelect);\r\n\n\n//# sourceURL=webpack://rks/./src/js/modules/controls/initPseudoSelect.js?");

/***/ }),

/***/ "./src/js/modules/controls/initRadioLabels.js":
/*!****************************************************!*\
  !*** ./src/js/modules/controls/initRadioLabels.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction initRadioLabels() {\r\n  $('.radio').parent().click(function () {\r\n    const $this = $(this)\r\n    const $radio = $this.children('.radio')\r\n    const $radioIsDisabled = $radio.is(':disabled')\r\n\r\n    if ($radioIsDisabled) return\r\n    $radio.prop('checked', true)\r\n  })\r\n}\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initRadioLabels);\r\n\n\n//# sourceURL=webpack://rks/./src/js/modules/controls/initRadioLabels.js?");

/***/ }),

/***/ "./src/js/modules/slider/changeSliderHeight.js":
/*!*****************************************************!*\
  !*** ./src/js/modules/slider/changeSliderHeight.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// изменение высоты слайдера\r\nfunction changeSliderHeight(action, value) {\r\n  setTimeout(() => {\r\n    const slickList = document.querySelector('.slick-list')\r\n    const slickCurrent = slickList.querySelector('.slick-current')\r\n    const slickCurrentHeight = getComputedStyle(slickCurrent).height\r\n\r\n    slickList.style.height = slickCurrentHeight\r\n  }, 0)\r\n}\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (changeSliderHeight);\r\n\n\n//# sourceURL=webpack://rks/./src/js/modules/slider/changeSliderHeight.js?");

/***/ }),

/***/ "./src/js/modules/slider/initSlider.js":
/*!*********************************************!*\
  !*** ./src/js/modules/slider/initSlider.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// инициализация слайдера\r\nfunction initSlider() {\r\n    return $('.slider').slick({\r\n            nextArrow: '<button type=\"button\" class=\"slick-arrow slick-next btn dark_btn\">Далее</button>',\r\n            prevArrow: '<button type=\"button\" class=\"slick-arrow slick-prev btn\">Назад</button>',\r\n            dots: true,\r\n            infinite: false,\r\n            draggable: false,\r\n            adaptiveHeight: true,\r\n            initialSlide: 0\r\n          })\r\n}\r\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (initSlider);\r\n\n\n//# sourceURL=webpack://rks/./src/js/modules/slider/initSlider.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/lk_request_fileinput.js");
/******/ 	
/******/ })()
;